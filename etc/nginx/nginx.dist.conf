# Declare the environment variables
env DEBUG;
env SSL;
env DIR;
env BIN;
env ETC;
env OPT;
env SRC;
env TMP;
env VAR;
env WEB;
env PORT;
env CACHE_DIR;
env LOG_DIR;
env APPLICATION_SECRET;
env REDIS_HOST;
env REDIS_PORT;
env REDIS_PASSWORD;
env REDIS_DB;
env DB_NAME;
env DB_USER;
env DB_PASSWORD;
env DB_HOST;
env DB_PORT;

# user  __USER__;

worker_processes  4;

error_log __LOG__ info;

events {
  worker_connections 1024;
}

http {
  include       mime_types.conf;
  default_type  text/html;

  include lua_package_path.conf;
  include lua_package_cpath.conf;

  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  keepalive_timeout  75;
  client_max_body_size    512m;
  client_body_buffer_size 128k;

  # enable gzip compression
  gzip              on;
  gzip_vary         on;
  gzip_min_length   1000;
  gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml text/x-component text/x-js text/richtext image/svg+xml text/xsd text/xsl image/bmp application/java application/msword application/vnd.ms-fontobject application/x-msdownload image/x-icon image/webp application/json application/vnd.ms-access application/vnd.ms-project application/x-font-otf application/vnd.ms-opentype application/vnd.oasis.opendocument.database application/vnd.oasis.opendocument.chart application/vnd.oasis.opendocument.formula application/vnd.oasis.opendocument.graphics application/vnd.oasis.opendocument.spreadsheet application/vnd.oasis.opendocument.text audio/ogg application/pdf application/vnd.ms-powerpoint application/x-shockwave-flash image/tiff application/x-font-ttf audio/wav application/vnd.ms-write application/font-woff application/vnd.ms-excel;
  gzip_comp_level   6;
  gzip_proxied      any;
  gzip_disable      "msie6";
  gzip_buffers      16 8k;
  # end gzip configuration

  #file caching
  open_file_cache  max=2000 inactive=10m;
  open_file_cache_valid     5m;
  open_file_cache_min_uses  2;
  open_file_cache_errors    off;
  # end file caching configuration

  access_log on;

  lua_capture_error_log 100k;

  include ssl-params.conf;

  # Defines robot_rate limiting zone to ratelimit any bots
  limit_req_zone $binary_remote_addr zone=robot_rate:10m rate=10r/s;

  # Turn off code_caching, not recommended for production env
  #lua_code_cache off;

  # Include server directive for forcing SSL if applicable
  __INCLUDE_FORCE_SSL__

  upstream php {
    server unix:__VAR__/socket/php-cgi.socket;
  }

  server {
    listen __PORT__ __SSL__;
    server_name __HOST_NAMES__ ;
    port_in_redirect off;

    access_log __LOG_DIR__/access.log;

    # Set up ENV variables
    include lua_env.conf;

    # SSL cert and key directives go here
    __SSL_CERT_LINE__
    __SSL_KEY_LINE__

    # Set up url rewrites
    include rewrites.conf;

    resolver local=on ipv6=off;
    resolver_timeout 5s;

    set $session_secret __SESSION_SECRET__;

    root __WEB__;
    index index.php;

    # System endpoints below this point. Modify with caution.
    location = /ping {
        limit_req zone=robot_rate burst=20 nodelay;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    include routes.conf;

    # Next.js static assets
    location ^~ /_next/ {
      alias __SRC__/next-js/dist/_next/;
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Vue (Vite) static assets
    location ^~ /assets/ {
      alias __SRC__/vue/dist/assets/;
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # WordPress content assets
    location ^~ /wp-content/ {
      alias __WEB__/wp-content/;
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Static asset matcher for anything with a known extension
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff2?|ttf|eot|map|json|pdf|txt|xml|zip|tar|gz|mp4|mp3)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    location / {
      access_by_lua_block {
        local manager = require("ab.manager")
        local m = manager.new()

        -- pcall will catch and prevent catastrophic failures (Lua runtime errors, Redis problems, bugs, etc.).
        -- The control flow should gracefully wind up in the WordPress front end if anything fails.
        local ok, bucket = pcall(function() return m:get_bucket() end)
        if not ok then
          ngx.log(ngx.ERR, "A/B manager error, defaulting to WP: " .. tostring(bucket))
          return  -- Let request fall through to try_files (WordPress)
        end

        if bucket == "A" then
          return ngx.exec("/next/")
        elseif bucket == "B" then
          return ngx.exec("/vue/")
        else
          return  -- For bucket "C", do nothing: fall through to try_files (WordPress at /)
        end
      }

      # The fallback for all others (bucket "C")â€”normal WordPress at /
      try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
      # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
      fastcgi_read_timeout      600;
      fastcgi_send_timeout      600;
      fastcgi_connect_timeout   600;

      include                   fastcgi_params.conf;
      fastcgi_intercept_errors  on;
      fastcgi_pass              php;
    }

    # frontend: Next.js (Static Export in dist/)
    location /next/ {
      alias __SRC__/next-js/dist/;
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # frontend: Vue (Vite output in dist/)
    location /vue/ {
      alias __SRC__/vue/dist/;
      index index.html;
      try_files $uri $uri/ /index.html;
    }
  }
}
